# This is a frozen state file generated by GNU m4 1.4
V1
Q1,1
[]
T29,22
m4_location(AS_BASENAME_EXPR)../m4sugar/m4sh.m4:423
T10,141
AS_DIRNAME_m4_defun_pro([AS_DIRNAME])(dirname $1) 2>/dev/null ||
AS_DIRNAME_EXPR([$1]) 2>/dev/null ||
AS_DIRNAME_SED([$1])[]_m4_defun_epi([AS_DIRNAME])
F9,6
m4_formatformat
F14,11
m4_changequotechangequote
T29,22
m4_location(_AS_TEST_PREPARE)../m4sugar/m4sh.m4:686
T10,117
m4_re_wordabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789*
T16,85
_AS_QUOTE_IFELSEm4_bmatch([$1],
          [\\[\\$]], [$2],
          [\\[`""]], [$3],
          [$2])
T17,45
_AS_ECHO_UNQUOTEDecho "$1" >&m4_default([$2], [AS_MESSAGE_FD])
T16,570
_AS_LN_S_PREPARE_m4_defun_pro([_AS_LN_S_PREPARE])rm -f conf$$ conf$$.exe conf$$.file
echo >conf$$.file
if ln -s conf$$.file conf$$ 2>/dev/null; then
  # We could just check for DJGPP; but this test a) works b) is more generic
  # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
  if test -f conf$$.exe; then
    # Don't use ln at all; we don't have any links
    as_ln_s='cp -p'
  else
    as_ln_s='ln -s'
  fi
elif ln conf$$.file conf$$ 2>/dev/null; then
  as_ln_s=ln
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.file
[]_m4_defun_epi([_AS_LN_S_PREPARE])
T10,54
m4_includem4_include_unique([$1])dnl
m4_builtin([include], [$1])
T21,1
_m4_divert(M4SH-INIT)4
T28,22
m4_location(AS_BASENAME_SED)../m4sugar/m4sh.m4:430
T12,10
m4_cr_digits0123456789
T7,78
m4_signm4_bmatch([$1],
           [^-], -1,
           [^0+], 0,
                  1)
T11,17
m4_location__file__:__line__
T7,30
AS_WARNAS_MESSAGE([WARNING: $1], [2])
T10,112
AS_VAR_GETAS_LITERAL_IF([$1],
               [$$1],
               [`eval echo '${'m4_bpatsubst($1, [[\\`]], [\\\&])'}'`])
T21,22
m4_location(AS_TR_SH)../m4sugar/m4sh.m4:840
T31,22
m4_location(_AS_ECHO_N_PREPARE)../m4sugar/m4sh.m4:336
T11,174
m4_text_box@%:@@%:@ m4_bpatsubst([$1], [.], m4_if([$2], [], [[-]], [[$2]])) @%:@@%:@
@%:@@%:@ $1 @%:@@%:@
@%:@@%:@ m4_bpatsubst([$1], [.], m4_if([$2], [], [[-]], [[$2]])) @%:@@%:@[]dnl

T10,52
m4_flattenm4_translit(m4_bpatsubst([[[$1]]], [\\
]), [
], [ ])
F11,8
m4_traceofftraceoff
T6,342
m4_form4_case(m4_sign(m4_eval($3 - $2)),
         1, [m4_assert(m4_sign(m4_default($4, 1)) == 1)],
        -1, [m4_assert(m4_sign(m4_default($4, -1)) == -1)])dnl
m4_pushdef([$1], [$2])dnl
m4_if(m4_eval([$3 > $2]), 1,
      [_m4_for([$1], [$3], m4_default([$4], 1), [$5])],
      [_m4_for([$1], [$3], m4_default([$4], -1), [$5])])dnl
m4_popdef([$1])
T12,55
m4_copy_unm4m4_copy([$1], m4_bpatsubst([$1], [^m4_\(.*\)], [[\1]]))
T13,116
_AS_BOX_INDIRsed 'h;s/./m4_default([$2], [-])/g;s/^.../@%:@@%:@ /;s/...$/ @%:@@%:@/;p;x;p;x' <<_ASBOX
@%:@@%:@ $1 @%:@@%:@
_ASBOX
F7,6
m4_wrapm4wrap
T10,161
_AS_ECHO_NAS_REQUIRE([_AS_ECHO_N_PREPARE])dnl
echo $ECHO_N "_AS_QUOTE([$1])$ECHO_C" >&m4_default([$2],
                                                    [AS_MESSAGE_FD])
T7,122
m4_casem4_if([$#], 0, [],
       [$#], 1, [],
       [$#], 2, [$2],
       [$1], [$2], [$3],
       [$0([$1], m4_shiftn(3, $@))])
T17,135
_m4_dumpdefs_downm4_ifdef([_m4_dumpdefs],
          [m4_pushdef([$1], m4_defn([_m4_dumpdefs]))dnl
m4_popdef([_m4_dumpdefs])dnl
_m4_dumpdefs_down([$1])])
T13,15
AS_VAR_POPDEFm4_popdef([$1])
T18,272
_AS_ECHO_N_PREPARE_m4_defun_pro([_AS_ECHO_N_PREPARE])case `echo "testing\c"; echo 1,2,3`,`echo -n testing; echo 1,2,3` in
  *c*,-n*) ECHO_N= ECHO_C='
' ECHO_T='	' ;;
  *c*,*  ) ECHO_N=-n ECHO_C= ECHO_T= ;;
  *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
esac
[]_m4_defun_epi([_AS_ECHO_N_PREPARE])
T16,149
_AS_EXPR_PREPARE_m4_defun_pro([_AS_EXPR_PREPARE])if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi
[]_m4_defun_epi([_AS_EXPR_PREPARE])
F9,6
m4_substrsubstr
T18,2104
_AS_LINENO_PREPARE_AS_LINENO_WORKS || {
  # Find who we are.  Look in the path if we contain no path at all
  # relative or not.
  case $[0] in
    *[[\\/]]* ) as_myself=$[0] ;;
    *) _AS_PATH_WALK([],
                   [test -r "$as_dir/$[0]" && as_myself=$as_dir/$[0] && break])
       ;;
  esac
  # We did not find ourselves, most probably we were run as `sh COMMAND'
  # in which case we are not to be found in the path.
  if test "x$as_myself" = x; then
    as_myself=$[0]
  fi
  if test ! -f "$as_myself"; then
    AS_ERROR([cannot find myself; rerun with an absolute path])
  fi
  case $CONFIG_SHELL in
  '')
    _AS_PATH_WALK([/bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH],
      [for as_base in sh bash ksh sh5; do
	 case $as_dir in
	 /*)
	   if ("$as_dir/$as_base" -c '_AS_LINENO_WORKS') 2>/dev/null; then
	     CONFIG_SHELL=$as_dir/$as_base
	     export CONFIG_SHELL
	     exec "$CONFIG_SHELL" "$[0]" ${1+"$[@]"}
	   fi;;
	 esac
       done]);;
  esac

  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
  # uniformly replaced by the line number.  The first 'sed' inserts a
  # line-number line before each line; the second 'sed' does the real
  # work.  The second script uses 'N' to pair each line-number line
  # with the numbered line, and appends trailing '-' during
  # substitution so that $LINENO is not a special case at line end.
  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
  # second 'sed' script.  Blame Lee E. McMahon for sed's syntax.  :-)
  sed '=' <$as_myself |
    sed '
      N
      s,$,-,
      : loop
      s,^\([['$as_cr_digits']]*\)\(.*\)[[$]]LINENO\([[^'$as_cr_alnum'_]]\),\1\2\1\3,
      t loop
      s,-$,,
      s,^[['$as_cr_digits']]*\n,,
    ' >$as_me.lineno &&
  chmod +x $as_me.lineno ||
    AS_ERROR([cannot create $as_me.lineno; rerun with a POSIX shell])

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensible to this).
  . ./$as_me.lineno
  # Exit status is that of the last command.
  exit
}

T24,50
_m4_warning_error_ifelse__m4_warning_error_ifelse([$1], [$2], m4_warnings)
T11,200
_m4_foreachm4_if([$2], [[]], [],
       [m4_define([$1], m4_car($2))$3[]_m4_foreach([$1],
                                                   m4_cdr($2),
                                                   [$3])])
T10,0
m4_symbols
T30,0
m4_include(m4sugar/version.m4)
T27,22
m4_location(AS_DIRNAME_SED)../m4sugar/m4sh.m4:405
T20,20
m4_PACKAGE_BUGREPORTbug-autoconf@gnu.org
T9,138
m4_bmatchm4_if([$#], 0, [],
       [$#], 1, [],
       [$#], 2, [$2],
       m4_bregexp([$1], [$2]), -1, [$0([$1], m4_shiftn(3, $@))],
       [$3])
T8,228
m4_splitm4_changequote(``, '')dnl
[dnl Can't use m4_default here instead of m4_if, because m4_default uses
dnl [ and ] as quotes.
m4_bpatsubst(````$1'''',
	     m4_if(``$2'',, ``[ 	]+'', ``$2''),
	     ``], ['')]dnl
m4_changequote([, ])
T14,153
m4_append_uniqm4_ifdef([$1],
          [m4_bmatch([$3]m4_defn([$1])[$3], m4_re_escape([$3$2$3]), [],
                     [m4_append($@)])],
          [m4_append($@)])
T18,8
m4_PACKAGE_TARNAMEautoconf
T11,243
m4_list_cmpm4_if([$1$2], [()()], 0,
       [$1], [()], [$0((0), [$2])],
       [$2], [()], [$0([$1], (0))],
       [m4_case(m4_cmp(m4_car$1, m4_car$2),
                -1, -1,
                 1, 1,
                 0, [$0((m4_shift$1), (m4_shift$2))])])
T22,31
m4_expansion_stack_popm4_popdef([m4_expansion_stack])
T10,82
_m4_divertm4_ifdef([_m4_divert($1)],
          [m4_indir([_m4_divert($1)])],
          [$1])
T10,683
m4_requirem4_expansion_stack_push(m4_location[: $1 is required by...])dnl
m4_ifdef([_m4_expanding($1)],
         [m4_fatal([$0: circular dependency of $1])])dnl
m4_ifndef([_m4_divert_dump],
          [m4_fatal([$0: cannot be used outside of an m4_defun'd macro])])dnl
m4_provide_if([$1],
              [],
              [m4_divert_push(m4_eval(m4_divnum - 1))dnl
m4_default([$2], [$1])
m4_divert(m4_defn([_m4_divert_dump]))dnl
m4_undivert(m4_defn([_m4_divert_diversion]))dnl
m4_divert_pop(m4_defn([_m4_divert_dump]))])dnl
m4_provide_if([$1],
              [],
              [m4_warn([syntax],
                       [$1 is m4_require'd but is not m4_defun'd])])dnl
m4_expansion_stack_pop()dnl

T19,449
m4_version_unletterm4_translit(m4_bpatsubsts([$1],
                           [\([0-9]+\)\([abcdefghi]\)],
                             [m4_eval(\1 + 1).-1.\2],
                           [\([0-9]+\)\([jklmnopqrs]\)],
                             [m4_eval(\1 + 1).-1.1\2],
                           [\([0-9]+\)\([tuvwxyz]\)],
                             [m4_eval(\1 + 1).-1.2\2]),
             [abcdefghijklmnopqrstuvwxyz],
             [12345678901234567890123456])
T14,136
AS_VAR_PUSHDEFAS_LITERAL_IF([$2],
               [m4_pushdef([$1], [AS_TR_SH($2)])],
               [as_$1=AS_TR_SH($2)
m4_pushdef([$1], [$as_[$1]])])
T7,41
m4_warnm4_warning_ifelse([$1], [_m4_warn([$2])])
T14,300
_AS_CR_PREPARE_m4_defun_pro([_AS_CR_PREPARE])# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits
[]_m4_defun_epi([_AS_CR_PREPARE])
T17,0
m4_pattern_forbid
T9,166
m4_divertm4_define([m4_divert_stack],
           m4_location[: $0: $1]m4_ifdef([m4_divert_stack], [
m4_defn([m4_divert_stack])]))dnl
m4_builtin([divert], _m4_divert([$1]))dnl

T18,114
m4_version_comparem4_list_cmp((m4_split(m4_version_unletter([$1]), [\.])),
             (m4_split(m4_version_unletter([$2]), [\.])))
T7,0
__gnu__
T18,1
_m4_divert(NOTICE)4
F9,6
m4_syscmdsyscmd
T13,52
m4_cr_LettersabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
T16,5
_m4_divert(GROW)10000
T12,64
m4_re_stringabcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789*
T20,26
m4_location(m4_join)../m4sugar/m4sugar.m4:1505
T17,212
_AS_TR_SH_PREPARE_m4_defun_pro([_AS_TR_SH_PREPARE])AS_REQUIRE([_AS_CR_PREPARE])dnl
# Sed expression to map a string onto a valid variable name.
as_tr_sh="sed y%*+%pp%;s%[[^_$as_cr_alnum]]%_%g"
[]_m4_defun_epi([_AS_TR_SH_PREPARE])
T26,382
_AS_PATH_SEPARATOR_PREPARE_m4_defun_pro([_AS_PATH_SEPARATOR_PREPARE])# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  echo "#! /bin/sh" >conftest.sh
  echo  "exit 0"   >>conftest.sh
  chmod +x conftest.sh
  if (PATH=".;."; conftest.sh) >/dev/null 2>&1; then
    PATH_SEPARATOR=';'
  else
    PATH_SEPARATOR=:
  fi
  rm -f conftest.sh
fi
[]_m4_defun_epi([_AS_PATH_SEPARATOR_PREPARE])
F8,8
__file____file__
T9,65
m4_appendm4_define([$1],
           m4_ifdef([$1], [m4_defn([$1])$3])[$2])
T8,254
AS_TR_SH_m4_defun_pro([AS_TR_SH])AS_REQUIRE([_$0_PREPARE])dnl
AS_LITERAL_IF([$1],
              [m4_bpatsubst(m4_translit([[$1]], [*+], [pp]),
                            [[^a-zA-Z0-9_]], [_])],
              [`echo "$1" | $as_tr_sh`])[]_m4_defun_epi([AS_TR_SH])
T15,215
AS_BASENAME_SED_m4_defun_pro([AS_BASENAME_SED])echo X/[]$1 |
    sed ['/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
  	  /^X\/\(\/\/\)$/{ s//\1/; q; }
  	  /^X\/\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'][]_m4_defun_epi([AS_BASENAME_SED])
T11,146
AS_BASENAME_m4_defun_pro([AS_BASENAME])(basename $1) 2>/dev/null ||
AS_BASENAME_EXPR([$1]) 2>/dev/null ||
AS_BASENAME_SED([$1])[]_m4_defun_epi([AS_BASENAME])
T10,69
m4_tolowerm4_translit([$1], m4_defn([m4_cr_LETTERS]), m4_defn([m4_cr_letters]))
T29,22
m4_location(_AS_LN_S_PREPARE)../m4sugar/m4sh.m4:572
T17,49
m4_warning_ifelse_m4_warning_ifelse([$1], [$2], [$3], m4_warnings)
T8,101
m4_fatalm4_errprintn(m4_location[: error: $1])dnl
m4_expansion_stack_dump()dnl
m4_exit(m4_if([$2],, 1, [$2]))
T31,22
m4_location(_AS_TR_CPP_PREPARE)../m4sugar/m4sh.m4:849
T23,553
_AS_BROKEN_TEST_PREPARE_m4_defun_pro([_AS_BROKEN_TEST_PREPARE])# Find out how to test for executable files. Don't use a zero-byte file,
# as systems may use methods other than mode bits to determine executability.
cat >conf$$.file <<_ASEOF
@%:@! /bin/sh
exit 0
_ASEOF
chmod +x conf$$.file
if test -x conf$$.file >/dev/null 2>&1; then
  as_executable_p="test -x"
elif test -f conf$$.file >/dev/null 2>&1; then
  as_executable_p="test -f"
else
  AS_ERROR([cannot check whether a file is executable on this system])
fi
rm -f conf$$.file
[]_m4_defun_epi([_AS_BROKEN_TEST_PREPARE])
T17,189
_AS_UNSET_PREPARE_m4_defun_pro([_AS_UNSET_PREPARE])# Support unset when possible.
if (FOO=FOO; unset FOO) >/dev/null 2>&1; then
  as_unset=unset
else
  as_unset=false
fi
[]_m4_defun_epi([_AS_UNSET_PREPARE])
F9,6
m4_definedefine
F11,8
m4_translittranslit
T9,65
m4_ifvalnm4_if([$1],
       [],   [m4_n([$3])],
             [m4_n([$2])])
T12,24
m4_rename_m4m4_rename([$1], [m4_$1])
T13,296
_m4_defun_prom4_expansion_stack_push(m4_defn([m4_location($1)])[: $1 is expanded from...])dnl
m4_pushdef([_m4_expanding($1)])dnl
m4_ifdef([_m4_divert_dump],
         [m4_divert_push(m4_defn([_m4_divert_diversion]))],
         [m4_copy([_m4_divert_diversion], [_m4_divert_dump])dnl
m4_divert_push([GROW])])dnl

F7,4
m4_decrdecr
F10,7
m4_pushdefpushdef
F9,6
m4_divnumdivnum
T14,53
m4_cr_symbols1abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_
T14,63
m4_cr_symbols2abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789
T13,45
AS_LITERAL_IFm4_bmatch([$1], [[`$]],
          [$3], [$2])
T13,26
m4_cr_lettersabcdefghijklmnopqrstuvwxyz
T14,44
m4_divert_oncem4_expand_once([m4_divert_text([$1], [$2])])
T24,22
m4_location(AS_BASENAME)../m4sugar/m4sh.m4:435
T9,82
m4_beforem4_provide_if([$2],
               [m4_warn([syntax], [$2 was called before $1])])
T30,22
m4_location(AS_SHELL_SANITIZE)../m4sugar/m4sh.m4:186
T7,91
m4_defnm4_ifndef([$1],
           [m4_fatal([$0: undefined macro: $1])])dnl
m4_builtin([defn], $@)
T30,22
m4_location(_AS_TR_SH_PREPARE)../m4sugar/m4sh.m4:827
T11,55
m4_sincludem4_include_unique([$1])dnl
m4_builtin([sinclude], [$1])
T26,1
_m4_divert(HEADER-COMMENT)2
F11,8
m4_errprinterrprint
T13,239
m4_defun_oncem4_define([m4_location($1)], m4_location)dnl
m4_define([$1],
          [m4_provide_if([$1],
                         [m4_warn([syntax], [$1 invoked multiple times])],
                         [_m4_defun_pro([$1])$2[]_m4_defun_epi([$1])])])
T8,80
m4_ifsetm4_ifdef([$1],
          [m4_if(m4_defn([$1]), [], [$3], [$2])],
          [$3])
T8,1069
AS_UNAME{
cat <<_ASUNAME
m4_text_box([Platform.])

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
hostinfo               = `(hostinfo) 2>/dev/null               || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

_AS_PATH_WALK([$PATH], [echo "PATH: $as_dir"])
}
T7,201
AS_INITm4_init

# Forbidden tokens and exceptions.
m4_pattern_forbid([^_?AS_])

# Bangshe.
m4_divert_text([BINSH], [@%:@! /bin/sh])

# Let's go!
m4_wrap([m4_divert_pop([BODY])[]])
m4_divert_push([BODY])[]dnl

T8,42
_AS_ECHO_AS_ECHO_UNQUOTED([_AS_QUOTE([$1])], [$2])
T6,4
m4_car[$1]
T10,46
m4_foreachm4_pushdef([$1])_m4_foreach($@)m4_popdef([$1])
F9,6
m4_sysvalsysval
T29,22
m4_location(_AS_EXPR_PREPARE)../m4sugar/m4sh.m4:458
F7,4
m4_evaleval
F12,9
m4_debugmodedebugmode
T16,0
m4_pattern_allow
T21,22
m4_location(AS_UNSET)../m4sugar/m4sh.m4:252
T14,129
m4_expand_oncem4_provide_if(m4_ifval([$2], [[$2]], [[$1]]),
               [],
               [m4_provide(m4_ifval([$2], [[$2]], [[$1]]))[]$1])
T12,18
m4_errprintnm4_errprint([$1
])
T14,135
_AS_TR_PREPARE_m4_defun_pro([_AS_TR_PREPARE])AS_REQUIRE([_AS_TR_SH_PREPARE])dnl
AS_REQUIRE([_AS_TR_CPP_PREPARE])dnl
[]_m4_defun_epi([_AS_TR_PREPARE])
T23,22
m4_location(AS_DIRNAME)../m4sugar/m4sh.m4:410
T6,23
m4_cdrm4_dquote(m4_shift($@))
T27,22
m4_location(_AS_TR_PREPARE)../m4sugar/m4sh.m4:872
T12,981
m4_text_wrapm4_pushdef([m4_Prefix], m4_default([$2], []))dnl
m4_pushdef([m4_Prefix1], m4_default([$3], [m4_Prefix]))dnl
m4_pushdef([m4_Width], m4_default([$4], 79))dnl
m4_pushdef([m4_Cursor], m4_len(m4_Prefix1))dnl
m4_pushdef([m4_Separator], [])dnl
m4_Prefix1[]dnl
m4_if(m4_eval(m4_Cursor > m4_len(m4_Prefix)),
      1, [m4_define([m4_Cursor], m4_len(m4_Prefix))
m4_Prefix])[]dnl
m4_foreach([m4_Word], m4_quote(m4_split(m4_normalize([$1]))),
[m4_define([m4_Cursor], m4_eval(m4_Cursor + m4_len(m4_defn([m4_Word])) + 1))dnl
dnl New line if too long, else insert a space unless it is the first
dnl of the words.
m4_if(m4_eval(m4_Cursor > m4_Width),
      1, [m4_define([m4_Cursor],
                    m4_eval(m4_len(m4_Prefix) + m4_len(m4_defn([m4_Word])) + 1))]
m4_Prefix,
       [m4_Separator])[]dnl
m4_defn([m4_Word])[]dnl
m4_define([m4_Separator], [ ])])dnl
m4_popdef([m4_Separator])dnl
m4_popdef([m4_Cursor])dnl
m4_popdef([m4_Width])dnl
m4_popdef([m4_Prefix1])dnl
m4_popdef([m4_Prefix])dnl

T14,109
m4_file_appendm4_syscmd([cat >>$1 <<_m4eof
$2
_m4eof
])
m4_if(m4_sysval, [0], [],
      [m4_fatal([$0: cannot write: $1])])
T22,22
m4_location(AS_TR_CPP)../m4sugar/m4sh.m4:864
F8,5
m4_ifdefifdef
F7,4
m4_incrincr
T4,44
m4_nm4_if([$1],
       [], [],
           [$1
])
T10,74
AS_VAR_SETAS_LITERAL_IF([$1],
               [$1=$2],
               [eval "$1=$2"])
T18,4
m4_PACKAGE_VERSION2.53
T9,69
m4_assertm4_if(m4_eval([$1]), 0,
       [m4_fatal([assert failed: $1], [$2])])
T14,228
m4_divert_pushm4_pushdef([m4_divert_stack],
            m4_location[: $0: $1]m4_ifdef([m4_divert_stack], [
m4_defn([m4_divert_stack])]))dnl
m4_pushdef([_m4_divert_diversion], [$1])dnl
m4_builtin([divert], _m4_divert(_m4_divert_diversion))dnl

T8,0
__unix__
T5,70
m4_dom4_if($#, 0, [],
       $#, 1, [$1],
       [$1[]m4_do(m4_shift($@))])
F8,8
__line____line__
T9,26
m4_ifndefm4_ifdef([$1], [$3], [$2])
T30,22
m4_location(_AS_UNSET_PREPARE)../m4sugar/m4sh.m4:243
T9,507
AS_TMPDIR# Create a temporary directory, and hook for its removal unless debugging.
$debug ||
{
  trap 'exit_status=$?; rm -rf $tmp && exit $exit_status' 0
  trap 'AS_EXIT([1])' 1 2 13 15
}

# Create a (secure) tmp directory for tmp files.
: ${TMPDIR=/tmp}
{
  tmp=`(umask 077 && mktemp -d -q "$TMPDIR/$1XXXXXX") 2>/dev/null` &&
  test -n "$tmp" && test -d "$tmp"
}  ||
{
  tmp=$TMPDIR/$1$$-$RANDOM
  (umask 077 && mkdir $tmp)
} ||
{
   echo "$me: cannot create a temporary directory in $TMPDIR" >&2
   AS_EXIT
}dnl

T17,17
m4_PACKAGE_STRINGGNU Autoconf 2.53
F11,8
m4_maketempmaketemp
T11,40
m4_undivertm4_builtin([undivert], _m4_divert([$1]))
T18,184
_m4_warning_ifelsem4_case([$4],
         [$1],    [$2],
         [all],   [$2],
         [],      [$3],
         [none],  [$3],
         [no-$1], [$3],
         [$0([$1], [$2], [$3], m4_shiftn(4, $@))])
T10,175
AS_MESSAGEm4_ifset([AS_MESSAGE_LOG_FD],
          [{ _AS_ECHO([$as_me:$LINENO: $1], [AS_MESSAGE_LOG_FD])
_AS_ECHO([$as_me: $1], [$2]);}],
          [_AS_ECHO([$as_me: $1], [$2])])[]dnl

F5,6
m4_ififelse
T8,151
AS_UNSET_m4_defun_pro([AS_UNSET])AS_REQUIRE([_AS_UNSET_PREPARE])dnl
$as_unset $1 || test "${$1+set}" != set || { $1=$2; export $1; }[]_m4_defun_epi([AS_UNSET])
T8,4
m4_quote[$*]
F8,5
m4_indexindex
F12,8
m4_bpatsubstpatsubst
T17,1
_m4_divert(BINSH)0
T16,94
_AS_TEST_PREPARE_m4_defun_pro([_AS_TEST_PREPARE])as_executable_p="test -f"
[]_m4_defun_epi([_AS_TEST_PREPARE])
T15,111
AS_VAR_TEST_SETAS_LITERAL_IF([$1],
               [test "${$1+set}" = set],
               [eval "test \"\${$1+set}\" = set"])
T15,36
_AS_BOX_LITERALcat <<\_ASBOX
m4_text_box($@)
_ASBOX
T7,390
m4_init# All the M4sugar macros start with `m4_', except `dnl' kept as is
# for sake of simplicity.
m4_pattern_forbid([^_?m4_])
m4_pattern_forbid([^dnl$])

# Check the divert push/pop perfect balance.
m4_wrap([m4_ifdef([_m4_divert_diversion],
                  [m4_fatal([$0: unbalanced m4_divert_push:]
m4_defn([m4_divert_stack]))])[]])

m4_divert_push([KILL])
m4_wrap([m4_divert_pop([KILL])[]])

T9,93
m4_popdefm4_ifndef([$1],
           [m4_fatal([$0: undefined macro: $1])])dnl
m4_builtin([popdef], $@)
T10,440
AS_MKDIR_P{ case $1 in
  [[\\/]]* | ?:[[\\/]]* ) as_incr_dir=;;
  *)                      as_incr_dir=.;;
esac
as_dummy=$1
for as_mkdir_dir in `IFS='/\\'; set X $as_dummy; shift; echo "$[@]"`; do
  case $as_mkdir_dir in
    # Skip DOS drivespec
    ?:) as_incr_dir=$as_mkdir_dir ;;
    *)
      as_incr_dir=$as_incr_dir/$as_mkdir_dir
      test -d "$as_incr_dir" ||
        mkdir "$as_incr_dir" ||
	AS_ERROR([cannot create $1])
    ;;
  esac
done; }

T16,217
AS_BASENAME_EXPR_m4_defun_pro([AS_BASENAME_EXPR])m4_require([_AS_EXPR_PREPARE])dnl
$as_expr X/[]$1 : '.*/\([[^/][^/]*]\)/*$' \| \
	 X[]$1 : 'X\(//\)$' \| \
	 X[]$1 : 'X\(/\)$' \| \
	 .     : '\(.\)'[]_m4_defun_epi([AS_BASENAME_EXPR])
T6,27
m4_cmpm4_sign(m4_eval([$1 - $2]))
F6,3
m4_lenlen
T8,88
_m4_warn_m4_warning_error_ifelse([m4_fatal([$1])],
                          [m4_warning([$1])])
T9,36
m4_renamem4_copy([$1], [$2])m4_undefine([$1])
T14,50
m4_divert_textm4_divert_push([$1])dnl
$2
m4_divert_pop([$1])dnl

F8,5
m4_indirindir
T6,93
AS_BOXAS_LITERAL_IF([$1],
               [_AS_BOX_LITERAL($@)],
               [_AS_BOX_INDIR($@)])
T13,26
m4_cr_LETTERSABCDEFGHIJKLMNOPQRSTUVWXYZ
T9,186
_AS_QUOTE_AS_QUOTE_IFELSE([$1],
                  [AS_ESCAPE([$1], [`""])],
                  [m4_warn([obsolete],
           [back quotes and double quotes should not be escaped in: $1])dnl
$1])
T10,54
m4_noquotem4_changequote(-=<{,}>=-)$1-=<{}>=-m4_changequote([,])
T16,2
_m4_divert(KILL)-1
T7,57
AS_EXIT{ (exit m4_default([$1], 1)); exit m4_default([$1], 1); }
T17,188
m4_version_prereqm4_if(m4_version_compare(m4_defn([m4_PACKAGE_VERSION]), [$1]), -1,
       [m4_default([$3],
                   [m4_fatal([Autoconf version $1 or higher is required])])],
       [$2])[]dnl

F8,5
m4_shiftshift
T10,40
m4_warningm4_errprintn(m4_location[: warning: $1])
T15,281
AS_DIRNAME_EXPR_m4_defun_pro([AS_DIRNAME_EXPR])AS_REQUIRE([_AS_EXPR_PREPARE])dnl
$as_expr X[]$1 : 'X\(.*[[^/]]\)//*[[^/][^/]]*/*$' \| \
         X[]$1 : 'X\(//\)[[^/]]' \| \
         X[]$1 : 'X\(//\)$' \| \
         X[]$1 : 'X\(/\)' \| \
         .     : '\(.\)'[]_m4_defun_epi([AS_DIRNAME_EXPR])
T13,439
m4_divert_popm4_ifval([$1],
     [m4_if(_m4_divert([$1]), m4_divnum, [],
            [m4_fatal([$0($1): diversion mismatch: ]
m4_defn([m4_divert_stack]))])])dnl
m4_popdef([_m4_divert_diversion])dnl
dnl m4_ifndef([_m4_divert_diversion],
dnl           [m4_fatal([too many m4_divert_pop])])dnl
m4_builtin([divert],
           m4_ifdef([_m4_divert_diversion],
                    [_m4_divert(_m4_divert_diversion)], -1))dnl
m4_popdef([m4_divert_stack])dnl

T23,133
m4_expansion_stack_dumpm4_ifdef([m4_expansion_stack],
          [m4_errprintn(m4_defn([m4_expansion_stack]))])dnl
m4_errprintn(m4_location[: the top level])
T27,1
_m4_divert(HEADER-REVISION)1
T11,95
m4_undefinem4_ifndef([$1],
           [m4_fatal([$0: undefined macro: $1])])dnl
m4_builtin([undefine], $@)
F10,7
m4_traceontraceon
T36,22
m4_location(_AS_BROKEN_TEST_PREPARE)../m4sugar/m4sh.m4:679
T17,1088
AS_SHELL_SANITIZE_m4_defun_pro([AS_SHELL_SANITIZE])
## --------------------- ##
## M4sh Initialization.  ##
## --------------------- ##

# Be Bourne compatible
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
  set -o posix
fi

# NLS nuisances.
_AS_UNSET_PREPARE
m4_foreach([_AS_var],
  [LANG, LC_ALL, LC_TIME, LC_CTYPE, LANGUAGE,
   LC_COLLATE, LC_NUMERIC, LC_MESSAGES],
  [(set +x; test -n "`(_AS_var=C; export _AS_var) 2>&1`") &&
    { $as_unset _AS_var || test "${_AS_var+set}" != set; } ||
      { _AS_var=C; export _AS_var; }
])

# Name of the executable.
as_me=`AS_BASENAME("$[0]")`

# PATH needs CR, and LINENO needs CR and PATH.
_AS_CR_PREPARE
_AS_PATH_SEPARATOR_PREPARE
_AS_LINENO_PREPARE

_AS_ECHO_N_PREPARE
_AS_EXPR_PREPARE
_AS_LN_S_PREPARE
_AS_TEST_PREPARE
_AS_TR_CPP_PREPARE
_AS_TR_SH_PREPARE

# IFS
# We need space, tab and new line, in precisely that order.
as_nl='
'
IFS=" 	$as_nl"

# CDPATH.
AS_UNSET([CDPATH], [$PATH_SEPARATOR])
[]_m4_defun_epi([AS_SHELL_SANITIZE])
T7,101
_m4_for$4[]dnl
m4_if($1, [$2], [],
      [m4_define([$1], m4_eval($1+[$3]))_m4_for([$1], [$2], [$3], [$4])])
F3,3
dnldnl
T20,22
m4_location(AS_LN_S)../m4sugar/m4sh.m4:626
T28,22
m4_location(AS_EXECUTABLE_P)../m4sugar/m4sh.m4:444
T8,27
m4_ifvalm4_if([$1], [], [$3], [$2])
T11,48
m4_dumpdefs_m4_dumpdefs_up([$1])dnl
_m4_dumpdefs_down([$1])
F12,9
m4_changecomchangecom
T5,97
AS_IFm4_ifval([$2$3],
[if $1; then
  m4_ifval([$2], [$2], :)
m4_ifvaln([$3],
[else
  $3])dnl
fi
])dnl

T10,27
m4_providem4_define([m4_provide($1)])
T10,26
m4_defaultm4_ifval([$1], [$1], [$2])
T7,150
m4_join_m4_defun_pro([m4_join])m4_case([$#],
         [1], [],
         [2], [[$2]],
         [[$2][$1]$0([$1], m4_shiftn(2, $@))])[]_m4_defun_epi([m4_join])
T13,48
m4_provide_ifm4_ifdef([m4_provide($1)],
          [$2], [$3])
F10,7
m4_esyscmdesyscmd
F10,7
m4_builtinbuiltin
F10,6
m4_bregexpregexp
T12,26
m4_normalizem4_strip(m4_flatten([$1]))
T10,75
AS_REQUIREm4_provide_if([$1], [],
               [m4_divert_text([M4SH-INIT], [$1])])
T8,116
m4_defunm4_define([m4_location($1)], m4_location)dnl
m4_define([$1],
          [_m4_defun_pro([$1])$2[]_m4_defun_epi([$1])])
F12,9
m4_debugfiledebugfile
T7,99
AS_LN_S_m4_defun_pro([AS_LN_S])AS_REQUIRE([_AS_LN_S_PREPARE])dnl
$as_ln_s $1 $2
[]_m4_defun_epi([AS_LN_S])
T28,1
_m4_divert(HEADER-COPYRIGHT)3
T25,139
__m4_warning_error_ifelsem4_case([$3],
         [error],    [$1],
         [],         [$2],
         [no-error], [$2],
         [$0([$1], [$2], m4_shiftn(3, $@))])
T16,188
_AS_LINENO_WORKS
  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2" dnl

T28,22
m4_location(AS_DIRNAME_EXPR)../m4sugar/m4sh.m4:397
T27,22
m4_location(_AS_CR_PREPARE)../m4sugar/m4sh.m4:818
T9,98
AS_ESCAPEm4_bpatsubst([$1],
             m4_ifval([$2], [[\([$2]\)]], [[\([\"$`]\)]]),
             [\\\1])
T7,30
m4_copym4_define([$2], m4_defn([$1]))
T15,125
AS_EXECUTABLE_P_m4_defun_pro([AS_EXECUTABLE_P])AS_REQUIRE([_AS_TEST_PREPARE])dnl
$as_executable_p $1[]dnl
[]_m4_defun_epi([AS_EXECUTABLE_P])
T9,4
m4_dquote[$@]
T10,69
m4_toupperm4_translit([$1], m4_defn([m4_cr_letters]), m4_defn([m4_cr_LETTERS]))
T10,99
_m4_shiftnm4_if([$1], 0,
       [m4_shift($@)],
       [_m4_shiftn(m4_eval([$1]-1), m4_shift(m4_shift($@)))])
T18,236
_AS_TR_CPP_PREPARE_m4_defun_pro([_AS_TR_CPP_PREPARE])AS_REQUIRE([_AS_CR_PREPARE])dnl
# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="sed y%*$as_cr_letters%P$as_cr_LETTERS%;s%[[^_$as_cr_alnum]]%_%g"
[]_m4_defun_epi([_AS_TR_CPP_PREPARE])
F7,6
m4_exitm4exit
T17,124
m4_include_uniquem4_ifdef([m4_include($1)],
          [m4_warn([syntax], [file `$1' included several times])])dnl
m4_define([m4_include($1)])
T16,4
_m4_divert(BODY)1000
T23,114
m4_expansion_stack_pushm4_pushdef([m4_expansion_stack],
            [$1]m4_ifdef([m4_expansion_stack], [
m4_defn([m4_expansion_stack])]))
T12,51
m4_re_escapem4_bpatsubst([$1],
              [[][+*.]], [\\\&])
T9,383
AS_TR_CPP_m4_defun_pro([AS_TR_CPP])AS_REQUIRE([_$0_PREPARE])dnl
AS_LITERAL_IF([$1],
              [m4_bpatsubst(m4_translit([[$1]],
                                        [*abcdefghijklmnopqrstuvwxyz],
                                        [PABCDEFGHIJKLMNOPQRSTUVWXYZ]),
                           [[^A-Z0-9_]], [_])],
              [`echo "$1" | $as_tr_cpp`])[]_m4_defun_epi([AS_TR_CPP])
T9,51
m4_shiftnm4_assert(($1 >= 0) && ($# > $1))dnl
_m4_shiftn($@)
T8,56
AS_ERROR{ AS_MESSAGE([error: $1], [2])
   AS_EXIT([$2]); }[]dnl

F10,7
m4_dumpdefdumpdef
T8,122
m4_stripm4_bpatsubsts([[$1]],
               [[ 	]+], [ ],
               [^\(..\) ],    [\1],
               [ \(..\)$],    [\1])
T13,248
m4_bpatsubstsm4_if([$#], 0, [m4_fatal([$0: too few arguments: $#])],
       [$#], 1, [m4_fatal([$0: too few arguments: $#: $1])],
       [$#], 2, [m4_builtin([patsubst], $@)],
       [$0(m4_builtin([patsubst], [[$1]], [$2], [$3]),
           m4_shiftn(3, $@))])
T13,271
_AS_PATH_WALKAS_REQUIRE([_AS_PATH_SEPARATOR_PREPARE])dnl
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
AS_LITERAL_IF(m4_default([$1], [$PATH]),
[as_dummy="$1"
for as_dir in $as_dummy],
[for as_dir in m4_default([$1], [$PATH])])
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  $2
done

T15,12
m4_PACKAGE_NAMEGNU Autoconf
T13,212
_m4_defun_epim4_divert_pop()dnl
m4_if(_m4_divert_dump, _m4_divert_diversion,
      [m4_undivert([GROW])dnl
m4_undefine([_m4_divert_dump])])dnl
m4_expansion_stack_pop()dnl
m4_popdef([_m4_expanding($1)])dnl
m4_provide([$1])dnl

T13,42
AS_VAR_SET_IFAS_IF([AS_VAR_TEST_SET([$1])], [$2], [$3])
T15,133
_m4_dumpdefs_upm4_ifdef([$1],
          [m4_pushdef([_m4_dumpdefs], m4_defn([$1]))dnl
m4_dumpdef([$1])dnl
m4_popdef([$1])dnl
_m4_dumpdefs_up([$1])])
T39,22
m4_location(_AS_PATH_SEPARATOR_PREPARE)../m4sugar/m4sh.m4:591
T14,254
AS_DIRNAME_SED_m4_defun_pro([AS_DIRNAME_SED])echo X[]$1 |
    sed ['/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
  	  /^X\(\/\/\)$/{ s//\1/; q; }
  	  /^X\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'][]_m4_defun_epi([AS_DIRNAME_SED])
D-1,0

# End of frozen state file
